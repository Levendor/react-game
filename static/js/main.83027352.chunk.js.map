{"version":3,"sources":["model/constants.ts","model/Ship.ts","model/Field.ts","model/Utils.ts","components/battlefield-line/index.ts","components/battlefield-line/battlefield-line.tsx","model/symbols.ts","components/battlefield-cell/index.ts","components/battlefield-cell/battlefield-cell.tsx","components/battlefield/index.ts","components/battlefield/battlefield.tsx","assets/rs_school_js.svg","components/footer/index.ts","components/footer/footer.tsx","components/header-button/index.ts","components/header-button/header-button.tsx","components/header/index.ts","components/header/header.tsx","components/score-line-win-counter/index.ts","components/score-line-win-counter/score-line-win-counter.tsx","components/score-line-player-name/index.ts","components/score-line-player-name/score-line-player-name.tsx","components/score-line-score-counter/index.ts","components/score-line-score-counter/score-line-score-counter.tsx","components/score-line/index.ts","components/score-line/score-line.tsx","components/moves-counter/index.ts","components/moves-counter/moves-counter.tsx","components/modal/statistics/index.ts","components/modal/statistics/statistics.tsx","components/modal/settings/index.ts","components/modal/settings/settings.tsx","components/modal/change-user/index.ts","components/modal/change-user/change-user.tsx","components/modal/index.ts","components/modal/modal.tsx","assets/audio/crush/1.mp3","assets/audio/hit/1.mp3","assets/audio/hit/2.mp3","assets/audio/miss/1.mp3","assets/audio/miss/2.mp3","assets/audio/miss/3.mp3","assets/audio/miss/4.mp3","assets/audio/shot/1.mp3","assets/audio/shot/2.mp3","assets/audio/shot/3.mp3","assets/audio/shot/4.mp3","assets/audio/shot/5.mp3","assets/audio/music.mp3","components/modal/popup/index.ts","components/modal/popup/popup.tsx","components/app/index.ts","components/app/App.tsx","index.tsx","model/Model.ts"],"names":["SOUND_DELAY","INITIAL_SCORE","FIELD_SIZE","SHIPS","TOP_LINE_TEMPLATE","LEFT_LINE_TEMPLATE","FIELD_TEMPLATE","HEADER_BUTTONS_TITLES","Ship","type","position","entryPoints","length","coordinates","stringCoordinates","shipArea","stringShipArea","isWrecked","this","getShipSize","getShipCoordinates","map","point","join","getShipArea","Array","fill","item","index","isVertical","area","top","left","i","j","push","Field","loadedField","ships","occupiedCells","stringOccupiedCells","field","shots","wreckedShipsArea","difficultyLevel","setDifficultyLevel","createShips","forEach","ship","newShip","Math","round","random","floor","isShipPlacedWrong","shipArray","isShipsIntersected","some","includes","isShipOutsideField","coordinate","placeShips","shipsArray","flat","generateField","occupiedCellsArray","row","cell","targeting","aiming","targets","checkCellsNearby","shot","wreckedShip","getWreckedShipArea","wreckedShipArea","stringWreckedShipArea","from","Set","Y","X","rowIndex","cellIndex","whatIsThisShip","find","isShipWrecked","every","hitPoint","isHit","checkPoint","getCellsNearby","hitPointY","hitPointX","isIntactCell","isCellWithinBattlefield","shotsBeforeLast","validCellsNearby","filter","intactValidCellsNearby","intactAnotherShipDecks","isLongShipGetHerAnotherDecks","cellsNearby","anotherShipDecks","hitCoordinates","split","anotherWreckedShipDeck","diffY","abs","diffX","Object","assign","another","value","compare","first","second","Line","props","line","className","toUpperCase","Component","SYMBOLS","HEADER_BUTTONS_SYMBOLS","faSync","faChartLine","faTools","faRobot","faUserFriends","DOT","faCircle","CROSS","faTimes","SQUARE","faSquare","OK","faCheck","USER","faUserCheck","MUSIC","faMusic","STOP","faStop","FULLSCREEN","faExpandArrowsAlt","Cell","cellValue","side","isAutoGame","icon","size","onCellClick","cellContent","onClick","style","gridArea","Battlefield","Footer","href","src","logo","alt","HeaderButton","getProperLetter","title","componentDidMount","document","addEventListener","event","code","shiftKey","onButtonClick","onKeyPress","id","faIcon","Header","callbacks","isPlay","symbols","titles","WinCounter","arr","star","PlayerName","playerName","slice","ScoreCounter","score","player1Score","player2Score","ScoreLine","bestOf","starArr1","fullStar","emptyStar","starArr2","reverse","players","player1Name","player2Name","MovesCounter","player1Title","player1Counter","player2Title","player2Counter","Statistics","userName","gamesTotal","gamesWon","winRatio","toFixed","Settings","getDifficultyLabel","getAudioLabel","getMusicLabel","getThemeLabel","onDifficultyChange","target","onBestOfChange","onAudioChange","onMusicChange","onThemeChange","difficultyValue","bestOfValue","audioValue","musicRenderValue","themeValue","difficultyLabel","audioLabel","musicLabel","themeLabel","htmlFor","onChange","min","max","step","list","ChangeUser","state","inputValue","selectedValue","name","onUserButtonClick","onInputChange","setState","onSelectUser","userList","placeholder","user","Modal","getComponent","component","difficultLevel","musicValue","modalWindow","onCloseButtonClick","ModalComponent","Popup","text","popupClass","App","crushSounds","hitSounds","missSounds","shotSounds","music","newGame","game","model","start","disabledApp","disabledField","currentBestOf","player1Field","player1Moves","player2Field","player2Moves","newRound","autoGame","fields","undefined","isRoundOverGetWinner","compStrike","player","playSound","compCoordinate","compPoint","newField","fieldProp","moves","movesProp","setTimeout","blowsExchange","isWinGameOrRound","showPopup","enemyStrike","isWin","fieldIndex","setScore","console","log","isGameOver","finishGame","openStatistics","openSettings","changeDifficultyLevel","newLevel","player1","setBestOf","newBestOf","volume","querySelector","classList","toggle","openChangeUser","getUserList","users","newUser","games","user1Name","player1GamesTotal","player1GamesWon","closeModal","soundArray","soundIndex","sound","Audio","play","toggleMusic","musicStarted","pause","popupText","hidePopup","goFullScreen","container","getElementById","requestFullscreen","restoreFullScreen","exitFullscreen","catch","err","Promise","resolve","user2Name","player2","SOUNDS","loop","strikeBack","saveGame","appClass","fieldClass","savedGame","getGameFromStorage","loadGame","JSON","parse","addGame","saveUserStatistics","findIndex","stringGame","stringify","localStorage","setItem","getItem","loadedGame","existedUser","getUserFromUsersStorage","addUserToUsersStorage","setUser","loadCurrentUserName","sort","existedUserIndex","getUserIndexFromUsersStorage","getUsersStorage","loadedUsers","currentUserName","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.83027352.chunk.js","sourcesContent":["const INITIAL_SHOT_BEFORE_LAST = 1;\r\nconst MAX_NEARBY_CELLS = 4;\r\nconst AUTO_GAME_TIME_STEP = 1000;\r\nconst GAME_TIME_STEP = 1000;\r\nconst SOUND_DELAY = 400;\r\nconst CRUSH_SOUND_DELAY = 300;\r\nconst TIME_BEFORE_NEW_ROUND = 5000;\r\nconst DEFAULT_PLAYER1_NAME: string = 'player 1';\r\nconst DEFAULT_PLAYER2_NAME: string = 'computer';\r\nconst DEFAULT_DIFFICULTY_LEVEL = 3;\r\nconst DEFAULT_BEST_OF: number = 1;\r\nconst DEFAULT_AUDIO_VALUE = 1;\r\nconst DEFAULT_MUSIC_VALUE = 0.1;\r\nconst DEFAULT_THEME_VALUE = 1;\r\nconst INITIAL_SCORE: number[] = [0, 0];\r\nconst FIELD_SIZE: number = 10;\r\nconst EMPTY_CELL = 0;\r\nconst CELL_WITH_SHIP = 1;\r\nconst HIT = 2;\r\nconst MISS = 3;\r\nconst BEST_OF_SETTINGS: number[] = [1, 2, 3];\r\nconst SHIP_AREA_WIDTH: number = 3;\r\nconst SHIPS: string[] = [\r\n  'battlecruiser',\r\n  'cruiser',\r\n  'cruiser',\r\n  'destroyer',\r\n  'destroyer',\r\n  'destroyer',\r\n  'boat',\r\n  'boat',\r\n  'boat',\r\n  'boat',\r\n];\r\nconst TOP_LINE_TEMPLATE: string[] = ['', 'а', 'б', 'в', 'г', 'д', 'е', 'ж', 'з', 'и', 'к'];\r\nconst LEFT_LINE_TEMPLATE: string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\r\nconst FIELD_TEMPLATE: Array<number[]> = [\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n];\r\nconst HEADER_BUTTONS_TITLES: string[] = [\r\n  'New game',\r\n  'Statistics',\r\n  'Settings',\r\n  'Autoplay',\r\n  'Change user',\r\n  'Music',\r\n]\r\n\r\nexport {\r\n  INITIAL_SHOT_BEFORE_LAST,\r\n  MAX_NEARBY_CELLS,\r\n  AUTO_GAME_TIME_STEP,\r\n  GAME_TIME_STEP,\r\n  SOUND_DELAY,\r\n  CRUSH_SOUND_DELAY,\r\n  TIME_BEFORE_NEW_ROUND,\r\n  DEFAULT_PLAYER1_NAME,\r\n  DEFAULT_PLAYER2_NAME,\r\n  DEFAULT_DIFFICULTY_LEVEL,\r\n  DEFAULT_BEST_OF,\r\n  DEFAULT_AUDIO_VALUE,\r\n  DEFAULT_MUSIC_VALUE,\r\n  DEFAULT_THEME_VALUE,\r\n  INITIAL_SCORE,\r\n  FIELD_SIZE,\r\n  SHIPS,\r\n  EMPTY_CELL,\r\n  CELL_WITH_SHIP,\r\n  HIT,\r\n  MISS,\r\n  BEST_OF_SETTINGS,\r\n  SHIP_AREA_WIDTH,\r\n  TOP_LINE_TEMPLATE,\r\n  LEFT_LINE_TEMPLATE,\r\n  FIELD_TEMPLATE,\r\n  HEADER_BUTTONS_TITLES,\r\n};","import { SHIP_AREA_WIDTH } from './constants';\r\n\r\nexport default class Ship {\r\n  type: string;\r\n  length: number;\r\n  position: string;\r\n  coordinates: Array<number[]>;\r\n  stringCoordinates: string[];\r\n  shipArea: Array<number[]>;\r\n  stringShipArea: string[];\r\n  isWrecked: boolean;\r\n\r\n  constructor(type: string, position: string, entryPoints: number[]) {\r\n    this.type = type;\r\n    this.length = this.getShipSize(type);\r\n    this.position = position;\r\n    this.coordinates = this.getShipCoordinates(position, entryPoints);\r\n    this.stringCoordinates = this.coordinates.map((point => point.join('')));\r\n    this.shipArea = this.getShipArea(position, entryPoints);\r\n    this.stringShipArea = this.shipArea.map((point => point.join('')));\r\n    this.isWrecked = false;\r\n  }\r\n\r\n  isVertical(position: string) {\r\n    if (position === 'vertical') {\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  getShipSize(type: string): number {\r\n    switch (type) {\r\n      case 'battlecruiser':\r\n        return 4;\r\n      case 'cruiser':\r\n        return 3;\r\n      case 'destroyer':\r\n        return 2;\r\n      case 'boat':\r\n        return 1;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  getShipCoordinates(position: string, entryPoints: number[]) {\r\n    return new Array(this.length)\r\n    .fill(0)\r\n    .map((item, index) => {\r\n      if (this.isVertical(position)) {\r\n        return [entryPoints[0] + index, entryPoints[1]]\r\n      } else return [entryPoints[0], entryPoints[1] + index];\r\n  });\r\n  }\r\n\r\n  getShipArea(position: string, entryPoints: number[]) {\r\n    const area = [];\r\n    const top = entryPoints[0] - 1;\r\n    const left = entryPoints[1] - 1;\r\n    if (this.isVertical(position)) {\r\n      for (let i = top; i < top + this.length + 2; i++) {\r\n        for (let j = left; j < left + SHIP_AREA_WIDTH; j++) {\r\n          area.push([i, j]);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = top; i < top + SHIP_AREA_WIDTH; i++) {\r\n        for (let j = left; j < left + this.length + 2; j++) {\r\n          area.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n    return area;\r\n  }\r\n}\r\n","import { FIELD_TEMPLATE, FIELD_SIZE, SHIPS, MAX_NEARBY_CELLS, INITIAL_SHOT_BEFORE_LAST, DEFAULT_DIFFICULTY_LEVEL } from './constants';\r\nimport Ship from './Ship';\r\n\r\nexport default class Field {\r\n  ships: Ship[];\r\n  occupiedCells: Array<number[]>;\r\n  stringOccupiedCells: string[];\r\n  field: Array<number[]>;\r\n  shots: string[];\r\n  wreckedShipsArea: string[];\r\n  difficultyLevel: number;\r\n\r\n  constructor(loadedField?: Field) {\r\n    this.ships = loadedField \r\n      ? [] \r\n      : this.createShips();\r\n    this.occupiedCells = loadedField\r\n      ? []\r\n      : this.placeShips(this.ships);\r\n    this.stringOccupiedCells = loadedField\r\n      ? []\r\n      : this.occupiedCells.map((cell) => cell.join(''))\r\n    this.field = loadedField\r\n      ? []\r\n      : this.generateField(this.occupiedCells);\r\n    this.shots = [];\r\n    this.wreckedShipsArea = [];\r\n    this.difficultyLevel = DEFAULT_DIFFICULTY_LEVEL;\r\n    if (loadedField) Object.assign(this, loadedField);\r\n  }\r\n\r\n  setDifficultyLevel = (difficultyLevel: number) => {\r\n    this.difficultyLevel = difficultyLevel;\r\n  }\r\n\r\n  createShips = (): Ship[] => {\r\n    const ships: Ship[] = [];\r\n    SHIPS.forEach((ship: string) => {\r\n      let newShip: Ship;\r\n      do {\r\n        const position = Math.round(Math.random()) ? 'vertical' : 'horizontal';\r\n        const entryPoints = [\r\n          Math.floor(Math.random() * FIELD_SIZE),\r\n          Math.floor(Math.random() * FIELD_SIZE),\r\n        ];\r\n        newShip = new Ship(ship, position, entryPoints);\r\n      } while (this.isShipPlacedWrong(newShip.coordinates,\r\n                                      newShip.stringCoordinates,\r\n                                      ships));\r\n      ships.push(newShip);\r\n    })\r\n    return ships;\r\n  }\r\n\r\n  isShipPlacedWrong = (coordinates: Array<number[]>, stringCoordinates: string[], shipArray: Ship[]) => {\r\n    const isShipsIntersected: boolean = stringCoordinates\r\n      .some((point) => shipArray\r\n        .some((ship: Ship) => ship.stringShipArea\r\n          .includes(point)));\r\n  \r\n    const isShipOutsideField: boolean = coordinates\r\n      .some((point: number[]) => point\r\n        .some((coordinate: number) => coordinate >= FIELD_SIZE));\r\n  \r\n    return isShipsIntersected || isShipOutsideField;\r\n  }\r\n  \r\n  placeShips = (shipsArray: Ship[]) => {\r\n    const occupiedCells = shipsArray.map((ship: Ship) => {\r\n      return [...ship.coordinates]\r\n    }).flat();\r\n  \r\n    return occupiedCells;\r\n  }\r\n\r\n  generateField = (occupiedCellsArray: Array<number[]>) => {\r\n    const field = FIELD_TEMPLATE.map((row) => [...row]);\r\n  \r\n    occupiedCellsArray.forEach((cell) => {\r\n      if (cell[0] < FIELD_SIZE && cell[1] < FIELD_SIZE) field[cell[0]][cell[1]] = 1;\r\n    })\r\n  \r\n    return field;\r\n  }\r\n\r\n  targeting = (coordinates: number[]) => {\r\n    const point = coordinates.join('');\r\n    return this.shots.includes(point)\r\n      || this.wreckedShipsArea.includes(point)\r\n  }\r\n\r\n  aiming = () => {\r\n    let point: number[];\r\n    const targets = this.difficultyLevel > 1 \r\n      ? this.checkCellsNearby(INITIAL_SHOT_BEFORE_LAST)\r\n      : [];\r\n    const length = targets.length;\r\n    do {\r\n      if (length) {\r\n        point = targets[Math.floor(Math.random() * length)];\r\n      } else {\r\n        point = [\r\n        Math.floor(Math.random() * FIELD_SIZE),\r\n        Math.floor(Math.random() * FIELD_SIZE),\r\n      ];\r\n    }\r\n    } while (this.targeting(point));\r\n    return point;\r\n  }\r\n\r\n  shot = (coordinates: number[]) => {\r\n    this.shots.push(coordinates.join(''));\r\n\r\n    const wreckedShip = this.getWreckedShipArea(coordinates)\r\n    const wreckedShipArea = wreckedShip ? wreckedShip.shipArea : [];\r\n    const stringWreckedShipArea = wreckedShip ? wreckedShip.stringShipArea : [];\r\n    this.wreckedShipsArea = Array\r\n      .from(new Set([...this.wreckedShipsArea, ...stringWreckedShipArea]));\r\n\r\n    const coordinatesToMark = wreckedShip\r\n      ? [coordinates, ...wreckedShipArea]\r\n      : [coordinates];\r\n\r\n    coordinatesToMark.forEach((coordinates) => {\r\n      const [Y, X] = coordinates;\r\n      this.field = this.field.map((row, rowIndex) => {\r\n          if (rowIndex === Y) {\r\n          return row.map((cell, cellIndex) => {\r\n            if (cellIndex === X) {\r\n              if (cell === 0) return 3;\r\n              else if (cell === 1) return 2;\r\n              return cell\r\n            }\r\n            return cell;\r\n          })\r\n        }\r\n        return row;\r\n      })\r\n    })\r\n\r\n    return this.field;\r\n  }\r\n\r\n  whatIsThisShip = (coordinates: number[]) => {\r\n    return this.ships.find((ship) => {\r\n      return ship.stringCoordinates.includes(coordinates.join(''));\r\n    })\r\n  }\r\n\r\n  isShipWrecked = (ship: Ship) => {\r\n    return ship.stringCoordinates\r\n      .every((hitPoint) => this.shots\r\n      .includes(hitPoint));\r\n  }\r\n\r\n  getWreckedShipArea = (coordinates: number[]) => {\r\n    let ship = this.whatIsThisShip(coordinates);\r\n    if (ship && this.isShipWrecked(ship)) {\r\n      ship.isWrecked = true;\r\n      return ship;\r\n    };\r\n    return undefined;\r\n  }\r\n\r\n  isHit = (hitPoint?:string) => {\r\n    const checkPoint = hitPoint ? hitPoint : this.shots[this.shots.length - 1];\r\n    return this.stringOccupiedCells.some((point) => {\r\n      return point === checkPoint;\r\n    })\r\n  }\r\n\r\n  getCellsNearby = (hitPoint: string) => {\r\n    const [hitPointY, hitPointX] = [+hitPoint[0], +hitPoint[1]];\r\n    return [\r\n      [hitPointY + 1, hitPointX],\r\n      [hitPointY - 1, hitPointX],\r\n      [hitPointY, hitPointX + 1],\r\n      [hitPointY, hitPointX - 1],\r\n    ]\r\n  }\r\n\r\n  isIntactCell = (coordinates: number[]) => {\r\n    const point = coordinates.join('');\r\n    return !this.shots.includes(point)\r\n      && !this.wreckedShipsArea.includes(point)\r\n  }\r\n\r\n  isCellWithinBattlefield = (coordinates: number[]) => {\r\n    return coordinates.every((coordinate) => coordinate >= 0 && coordinate < FIELD_SIZE)\r\n  }\r\n\r\n  checkCellsNearby = (shotsBeforeLast: number): number[][] => {\r\n    if (shotsBeforeLast > MAX_NEARBY_CELLS) return [];\r\n    const hitPoint = this.shots[this.shots.length - shotsBeforeLast];\r\n    if (this.isHit(hitPoint)) {\r\n      const validCellsNearby = this.getCellsNearby(hitPoint)\r\n        .filter(this.isCellWithinBattlefield);\r\n\r\n      const intactValidCellsNearby = validCellsNearby.filter(this.isIntactCell);\r\n      if (!intactValidCellsNearby.length) return [];\r\n  \r\n      const anotherShipDecks = this.difficultyLevel > 2\r\n        ? this.isLongShipGetHerAnotherDecks(hitPoint, validCellsNearby)\r\n        : [];\r\n      const intactAnotherShipDecks = anotherShipDecks.filter(this.isIntactCell);\r\n\r\n      if (intactAnotherShipDecks.length) {\r\n        return intactAnotherShipDecks;\r\n      } else {\r\n        return intactValidCellsNearby;\r\n      }\r\n    } else return this.checkCellsNearby(shotsBeforeLast + 1);\r\n  }\r\n\r\n  isLongShipGetHerAnotherDecks = (hitPoint: string, cellsNearby: number[][]): number[][] => {\r\n    const hitCoordinates = hitPoint.split('');\r\n    const anotherWreckedShipDeck = cellsNearby.find((cell) => {\r\n      return this.shots.includes(cell.join(''))\r\n        && this.stringOccupiedCells.includes(cell.join(''))\r\n    })\r\n    let anotherShipDecks: number[][];\r\n    if (anotherWreckedShipDeck) {\r\n      const diffY = Math.abs(+hitCoordinates[0] - anotherWreckedShipDeck[0]);\r\n      const diffX = Math.abs(+hitCoordinates[1] - anotherWreckedShipDeck[1]);\r\n      if (diffY === 1) { anotherShipDecks = [\r\n          [+hitCoordinates[0] + 1, +hitCoordinates[1]],\r\n          [anotherWreckedShipDeck[0] - 1, anotherWreckedShipDeck[1]],\r\n          [anotherWreckedShipDeck[0] + 1, +hitCoordinates[1]],\r\n          [+hitCoordinates[0] - 1, anotherWreckedShipDeck[1]],\r\n      ]} else if (diffX === 1) {anotherShipDecks = [\r\n        [+hitCoordinates[0], +hitCoordinates[1] + 1],\r\n        [anotherWreckedShipDeck[0], anotherWreckedShipDeck[1] + 1],\r\n        [anotherWreckedShipDeck[0], +hitCoordinates[1] - 1],\r\n        [+hitCoordinates[0], anotherWreckedShipDeck[1] - 1],\r\n      ]} else anotherShipDecks = [];\r\n    } else anotherShipDecks = [];\r\n    return anotherShipDecks;\r\n  }\r\n}\r\n","export function another(value: number) {\r\n  return (value + 1) % 2;\r\n}\r\n\r\nexport function compare(first: number, second: number, type: string): number {\r\n  if (type === 'ascending') return first - second;\r\n  else if (type === 'descending') return second - first;\r\n  else if (type === 'random') return Math.random() - 0.5;\r\n  return 0;\r\n}","import Line from './battlefield-line';\r\n\r\nexport default Line;","import React, { Component } from 'react';\r\nimport './battlefield-line.scss';\r\n\r\nimport { LEFT_LINE_TEMPLATE, TOP_LINE_TEMPLATE } from '../../model/constants';\r\n\r\ninterface Props {\r\n  position: string;\r\n}\r\n\r\nexport default class Line extends Component<Props> {\r\n  render() {\r\n    const { position } = this.props;\r\n    const line = position === 'top'\r\n      ? TOP_LINE_TEMPLATE\r\n      : LEFT_LINE_TEMPLATE;\r\n\r\n    return (\r\n      <div className={`${position}-line`}>\r\n        {\r\n          line.map((cell) => {\r\n            return <div className={`cell disabled ${position}-line-cell`}\r\n                        key={`${position}${cell}`}>\r\n                        {cell.toUpperCase()}\r\n                   </div>\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSync, faChartLine, faTools, faRobot, faUserFriends, faCircle, faTimes, faCheck, faUserCheck, faMusic, faStop, faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst SYMBOLS: {\r\n  HEADER_BUTTONS_SYMBOLS: IconProp[],\r\n  DOT: IconProp,\r\n  CROSS: IconProp,\r\n  SQUARE: IconProp,\r\n  OK: IconProp,\r\n  USER: IconProp,\r\n  MUSIC: IconProp,\r\n  STOP: IconProp,\r\n  FULLSCREEN: IconProp,\r\n} = {\r\n  HEADER_BUTTONS_SYMBOLS: [faSync, faChartLine, faTools, faRobot, faUserFriends],\r\n  DOT: faCircle,\r\n  CROSS: faTimes,\r\n  SQUARE: faSquare,\r\n  OK: faCheck,\r\n  USER: faUserCheck,\r\n  MUSIC: faMusic,\r\n  STOP: faStop,\r\n  FULLSCREEN: faExpandArrowsAlt,\r\n}\r\n\r\nexport default SYMBOLS;","import Cell from './battlefield-cell';\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { EMPTY_CELL, CELL_WITH_SHIP, HIT, MISS } from '../../model/constants';\r\nimport SYMBOLS from '../../model/symbols';\r\n\r\nimport './battlefield-cell.scss';\r\n\r\ninterface Props {\r\n  onCellClick?: Function;\r\n  side: string;\r\n  value: number;\r\n  coordinates: number[];\r\n  isAutoGame?: boolean;\r\n}\r\n\r\nexport default class Cell extends Component<Props> {  \r\n  cellContent(cellValue: number) {\r\n    const { side, isAutoGame } = this.props;\r\n    switch(cellValue) {\r\n      case EMPTY_CELL:\r\n        return '';\r\n      case CELL_WITH_SHIP:\r\n        if (side === 'foe' && !isAutoGame) return '';\r\n        return <FontAwesomeIcon icon={SYMBOLS.SQUARE} size=\"4x\" />;\r\n      case HIT:\r\n        return <FontAwesomeIcon icon={SYMBOLS.CROSS} size=\"4x\" />;\r\n      case MISS:\r\n        return <FontAwesomeIcon icon={SYMBOLS.DOT} size=\"xs\" />;\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, coordinates, onCellClick } = this.props;\r\n    const cellValue = this.cellContent(value);\r\n    return (\r\n      <div className={ cellValue\r\n        ? (value === HIT\r\n          ? \"cell grid-cell shake-cell disabled\"\r\n          : \"cell grid-cell disabled\")\r\n        : \"cell grid-cell\" }\r\n           onClick={\r\n             () => {if (onCellClick) onCellClick(coordinates, value)}\r\n            }\r\n           style={{gridArea: `cell-${coordinates.join('')}`}}>\r\n            {cellValue}\r\n      </div>\r\n    );\r\n  }\r\n}","import Battlefield from './battlefield';\r\n\r\nexport default Battlefield;","import React, { Component } from 'react';\r\nimport './battlefield.scss';\r\n\r\nimport Line from '../battlefield-line';\r\nimport Cell from '../battlefield-cell';\r\n\r\ninterface Props {\r\n  side: string;\r\n  field: Array<number[]>;\r\n  onCellClick?: Function;\r\n  isAutoGame?: boolean\r\n}\r\n\r\nexport default class Battlefield extends Component<Props> {\r\n  render() {\r\n    const { side, field, onCellClick, isAutoGame } = this.props;\r\n    const className = isAutoGame\r\n      ? \"battlefield disabled\"\r\n      : side === \"foe\"\r\n        ? \"battlefield\"\r\n        : \"battlefield disabled\";\r\n    return (\r\n      <div className={className} style={{gridArea: `${side}`}}>\r\n        <Line position=\"top\" />\r\n        <Line position=\"left\" />\r\n        {\r\n          field.map((row, i) => {\r\n            return (\r\n              row.map((cell, j) => {\r\n                return <Cell value={cell}\r\n                             side={side}\r\n                             isAutoGame={isAutoGame}\r\n                             coordinates={[i, j]}\r\n                             onCellClick={onCellClick}\r\n                             key={`${i}${j}`} />\r\n              })\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import Footer from './footer';\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport logo from \"../../assets/rs_school_js.svg\";\r\nimport './footer.scss';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer border\">\r\n        <div className=\"footer_links\">\r\n          <a href=\"https://github.com/Levendor\">\r\n            <span>[GitHub] Levendor</span>\r\n          </a>\r\n        </div>\r\n        <span className=\"footer_year\">2021</span>\r\n        <div className=\"footer_logo\">\r\n          <a href=\"https://rs.school/js/\">\r\n            <img className=\"footer_img\" src={logo} alt=\"logo\" />\r\n          </a>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}","import HeaderButton from './header-button';\r\n\r\nexport default HeaderButton;","import React, { Component, KeyboardEvent } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport './header-button.scss';\r\n\r\ninterface Props {\r\n  title: string,\r\n  onButtonClick: any,\r\n  faIcon: IconProp,\r\n}\r\n\r\nexport default class HeaderButton extends Component<Props> {\r\n  getProperLetter = (title: string) => {\r\n    switch(title) {\r\n      case 'New game':\r\n        return 'N';\r\n      case 'Statistics':\r\n        return 'S';\r\n      case 'Settings':\r\n        return 'P';\r\n      case 'Autoplay':\r\n        return 'R';\r\n      case 'Change user':\r\n        return 'U';\r\n      case 'Music':\r\n        return 'M';\r\n      case 'Fullscreen':\r\n        return 'F';\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener('keypress', (event) => {\r\n      if (event.code === `Key${this.getProperLetter(this.props.title)}` && event.shiftKey === true) {\r\n        this.props.onButtonClick();\r\n      }\r\n    });\r\n  }\r\n\r\n  onKeyPress = (event: KeyboardEvent): void => {\r\n    if (event.code === `Key${this.getProperLetter(this.props.title)}` && event.shiftKey === true) {\r\n      this.props.onButtonClick();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        id={this.props.title}\r\n        title={`${this.props.title}: Shift + ${this.getProperLetter(this.props.title)}`}\r\n        className={\"header-button\"}\r\n        onClick={this.props.onButtonClick}\r\n        type=\"button\"\r\n        onKeyPress={this.onKeyPress}\r\n      >\r\n        <FontAwesomeIcon icon={this.props.faIcon} size=\"lg\" />\r\n      </button>\r\n    );\r\n  }\r\n}","import Header from './header';\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { HEADER_BUTTONS_TITLES } from '../../model/constants';\r\nimport SYMBOLS from '../../model/symbols';\r\nimport HeaderButton from '../header-button';\r\nimport './header.scss';\r\n\r\ninterface Props {\r\n  callbacks: Function[];\r\n  isPlay: boolean,\r\n}\r\n\r\nexport default class Header extends Component<Props> {\r\n  render() {\r\n    const { callbacks, isPlay } = this.props;\r\n    const symbols = SYMBOLS.HEADER_BUTTONS_SYMBOLS;\r\n    const titles = HEADER_BUTTONS_TITLES;\r\n    return (\r\n      <header className=\"header border\">\r\n        <span className=\"header_title\">Морской бой</span>\r\n        <nav className=\"header_navbar\">\r\n          {\r\n            titles.map((title, index) => {\r\n              let icon;\r\n              if (title === \"Music\") {\r\n                if (isPlay) icon = SYMBOLS.STOP;\r\n                else icon = SYMBOLS.MUSIC;\r\n              } else icon = symbols[index];\r\n              return <HeaderButton title={title}\r\n                                   onButtonClick={() => callbacks[index](title)}\r\n                                   faIcon={icon}\r\n                                   key={title}\r\n            />\r\n            })\r\n          }\r\n        <HeaderButton title=\"Fullscreen\"\r\n                      onButtonClick={() => callbacks[callbacks.length - 1]('Fullscreen')}\r\n                      faIcon={SYMBOLS.FULLSCREEN}\r\n                      key=\"Fullscreen\"\r\n        />\r\n        </nav>\r\n      </header>\r\n    );\r\n\r\n  }\r\n}","import WinCounter from './score-line-win-counter';\r\n\r\nexport default WinCounter;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport './score-line-win-counter.scss';\r\n\r\ninterface Props {\r\n  faIcon: IconProp[]\r\n}\r\n\r\nexport default class WinCounter extends Component<Props> {\r\n  render() {\r\n    const arr = this.props.faIcon;\r\n    // const [ star1, star2 ] = arr;\r\n    return (\r\n      <div className=\"win-counter\">\r\n        {\r\n          arr.map((star: IconProp, index) => {\r\n            return <FontAwesomeIcon icon={star} size=\"2x\" key={index} />\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","import PlayerName from './score-line-player-name';\r\n\r\nexport  default PlayerName;","import React, { Component } from 'react';\r\n\r\nimport './score-line-player-name.scss';\r\n\r\ninterface Props {\r\n  playerName: string | undefined;\r\n}\r\n\r\nexport default class PlayerName extends Component<Props> {\r\n  render() {\r\n    let { playerName } = this.props;\r\n    const length = playerName ? playerName.length : 0;\r\n    if (length > 11) {\r\n      playerName = `${playerName?.slice(0, 10)}...`;\r\n    }\r\n    return (\r\n      <div className=\"player-name\">\r\n        <span className=\"player-name_text\">\r\n          {playerName}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}","import ScoreCounter from './score-line-score-counter';\r\n\r\nexport default ScoreCounter;","import React, { Component } from 'react';\r\n\r\nimport './score-line-score-counter.scss';\r\n\r\ninterface Props {\r\n  score: number[] | undefined;\r\n}\r\n\r\nexport default class ScoreCounter extends Component<Props> {\r\n  render() {\r\n    const [player1Score, player2Score] = this.props.score\r\n      ? this.props.score\r\n      : [];\r\n    return (\r\n      <div className=\"score-counter\">\r\n        <span className=\"score-counter_score\">\r\n          <span>{player1Score}</span>\r\n          <span>:</span>\r\n          <span>{player2Score}</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}","import ScoreLine from './score-line';\r\n\r\nexport default ScoreLine;","import React, { Component } from 'react';\r\nimport { faStar as fullStar }  from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport './score-line.scss';\r\n\r\nimport WinCounter from '../score-line-win-counter';\r\nimport PlayerName from '../score-line-player-name';\r\nimport ScoreCounter from '../score-line-score-counter';\r\n\r\ninterface Props {\r\n  bestOf: number | undefined;\r\n  score: number[] | undefined;\r\n  players: [(string | undefined), string];\r\n}\r\n\r\nexport default class ScoreLine extends Component<Props> {\r\n  render() {\r\n    const { bestOf, score } = this.props;\r\n    const [player1Score, player2Score] = score ? score : [];\r\n    const starArr1 = new Array(bestOf)\r\n      .fill(fullStar, 0, player1Score)\r\n      .fill(emptyStar, player1Score);\r\n    const starArr2 = new Array(bestOf)\r\n      .fill(fullStar, 0, player2Score)\r\n      .fill(emptyStar, player2Score)\r\n      .reverse();\r\n    const [player1Name, player2Name] = this.props.players\r\n      ? this.props.players\r\n      : [];\r\n    return (\r\n      <div className=\"score-line border\">\r\n        <WinCounter faIcon={starArr1} />\r\n        <PlayerName playerName={player1Name} />\r\n        <ScoreCounter score={score} />\r\n        <PlayerName playerName={player2Name} />\r\n        <WinCounter faIcon={starArr2} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import MovesCounter from './moves-counter';\r\n\r\nexport default MovesCounter;","import React from 'react';\r\nimport './moves-counter.scss';\r\n\r\ninterface Props {\r\n  player1Counter: number | undefined;\r\n  player2Counter: number | undefined;\r\n  player1Title: string | undefined;\r\n  player2Title: string | undefined;\r\n}\r\n\r\nexport default function MovesCounter(props: Props) {\r\n  return (\r\n    <div className=\"moves-counter\">\r\n      <span className=\"moves-counter_title\">\r\n        Ходов:\r\n      </span>\r\n      <div className=\"moves-counter_container\">\r\n        <div className=\"moves-counter_container_small\">\r\n          <span className=\"moves-counter_text\">\r\n            {props.player1Title}\r\n          </span>\r\n          <span className=\"moves-counter_numbers\">\r\n            {props.player1Counter}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"moves-counter_container_small\">\r\n          <span className=\"moves-counter_text\">\r\n            {props.player2Title}\r\n          </span>\r\n          <span className=\"moves-counter_numbers\">\r\n            {props.player2Counter}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import Statistics from './statistics';\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\n\r\nimport './statistics.scss';\r\n\r\ninterface Props {\r\n  userName: string;\r\n  gamesTotal: number;\r\n  gamesWon: number;\r\n}\r\n\r\nexport default class Statistics extends Component<Props> {\r\n  render() {\r\n    const { userName, gamesTotal, gamesWon } = this.props;\r\n    const winRatio = gamesTotal\r\n      ? (gamesWon / gamesTotal).toFixed(2)\r\n      : 0;\r\n    return (\r\n      <div className=\"statistics-container\">\r\n        <h3 className=\"statistics-title\">{userName}</h3>\r\n        <span className=\"statistics-text\">\r\n          Games total: \r\n          <span className=\"statistics-value\">{gamesTotal}</span>\r\n        </span>\r\n        <span className=\"statistics-text\">\r\n          Games won: \r\n          <span className=\"statistics-value\">{gamesWon}</span>\r\n        </span>\r\n        <span className=\"statistics-text\">\r\n          Win ratio: \r\n          <span className=\"statistics-value\">{winRatio}</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}","import Settings from './settings';\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\n\r\nimport './settings.scss';\r\n\r\ninterface Props {\r\n  difficultyValue: number;\r\n  onDifficultyChange: Function;\r\n  bestOfValue: number;\r\n  onBestOfChange: Function;\r\n  audioValue: number;\r\n  onAudioChange: Function;\r\n  musicRenderValue: number;\r\n  musicValue: number;\r\n  onMusicChange: Function;\r\n  themeValue: number;\r\n  onThemeChange: Function;\r\n}\r\n\r\nexport default class Settings extends Component<Props> {\r\n  getDifficultyLabel = (value: number) => {\r\n    const str = `${value}`;\r\n    switch(str) {\r\n      case '1':\r\n        return 'Easy';\r\n      case '2':\r\n        return 'Normal';\r\n      case '3':\r\n        return 'Hard';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getAudioLabel = (value: number) => {\r\n    const str = `${value}`;\r\n    switch(str) {\r\n      case '0':\r\n        return 'Mute';\r\n      case '0.5':\r\n        return 'Quiet';\r\n      case '1':\r\n        return 'Normal';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getMusicLabel = (value: number) => {\r\n    const str = `${value}`;\r\n    switch(str) {\r\n      case '0':\r\n        return 'Mute';\r\n      case '0.05':\r\n        return 'Quiet';\r\n      case '0.1':\r\n        return 'Normal';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getThemeLabel = (value: number) => {\r\n    const str = `${value}`;\r\n    switch(str) {\r\n      case '1':\r\n        return 'Light';\r\n      case '2':\r\n        return 'Dark';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  onDifficultyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onDifficultyChange(+event.target.value);\r\n  }\r\n\r\n  onBestOfChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onBestOfChange(+event.target.value);\r\n  }\r\n\r\n  onAudioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onAudioChange(+event.target.value);\r\n  }\r\n\r\n  onMusicChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onMusicChange(+event.target.value);\r\n  }\r\n\r\n  onThemeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onThemeChange(+event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { difficultyValue, bestOfValue, audioValue, musicRenderValue, themeValue } = this.props;\r\n    const difficultyLabel = this.getDifficultyLabel(difficultyValue)\r\n    const audioLabel = this.getAudioLabel(audioValue);\r\n    const musicLabel = this.getMusicLabel(musicRenderValue);\r\n    const themeLabel = this.getThemeLabel(themeValue);\r\n    return (\r\n      <div className=\"settings-container\">\r\n        <div className=\"settings-difficulty\">\r\n          <h3>\r\n            Difficulty level:\r\n            <label htmlFor=\"difficulty\">{difficultyLabel}</label>\r\n          </h3>\r\n          <input id=\"difficulty\"\r\n                type=\"range\" \r\n                value={difficultyValue}\r\n                onChange={this.onDifficultyChange}\r\n                min=\"1\"\r\n                max=\"3\"\r\n                step=\"1\"\r\n                list=\"difficultyList\" />\r\n          <datalist id=\"difficultyList\">\r\n            <option value=\"1\"/>\r\n            <option value=\"2\"/>\r\n            <option value=\"3\"/>\r\n          </datalist>\r\n        </div>\r\n\r\n        <div className=\"settings-best-of\">\r\n          <h3>\r\n            Best of:\r\n            <label htmlFor=\"bestOf\">{bestOfValue}</label>\r\n          </h3>\r\n          <input id=\"bestOf\"\r\n                type=\"range\" \r\n                value={bestOfValue}\r\n                onChange={this.onBestOfChange}\r\n                min=\"1\"\r\n                max=\"3\"\r\n                step=\"1\"\r\n                list=\"bestOfList\" />\r\n          <datalist id=\"bestOfList\">\r\n            <option value=\"1\"/>\r\n            <option value=\"2\"/>\r\n            <option value=\"3\"/>\r\n          </datalist>\r\n        </div>\r\n\r\n        <div className=\"settings-audio\">\r\n          <h3>\r\n            Sound volume:\r\n            <label htmlFor=\"audio\">{audioLabel}</label>\r\n          </h3>\r\n          <input id=\"audio\"\r\n                type=\"range\" \r\n                value={audioValue}\r\n                onChange={this.onAudioChange}\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.5\"\r\n                list=\"audioList\" />\r\n          <datalist id=\"audioList\">\r\n            <option value=\"0\"/>\r\n            <option value=\"0.5\"/>\r\n            <option value=\"1\"/>\r\n          </datalist>\r\n        </div>\r\n\r\n        <div className=\"settings-music\">\r\n          <h3>\r\n            Music volume:\r\n            <label htmlFor=\"music\">{musicLabel}</label>\r\n          </h3>\r\n          <input id=\"music\"\r\n                type=\"range\" \r\n                value={musicRenderValue}\r\n                onChange={this.onMusicChange}\r\n                min=\"0\"\r\n                max=\"0.1\"\r\n                step=\"0.05\"\r\n                list=\"musicList\" />\r\n          <datalist id=\"musicList\">\r\n            <option value=\"0\"/>\r\n            <option value=\"0.05\"/>\r\n            <option value=\"0.1\"/>\r\n          </datalist>\r\n        </div>\r\n\r\n        <div className=\"settings-theme\">\r\n          <h3>\r\n            Theme:\r\n            <label htmlFor=\"theme\">{themeLabel}</label>\r\n          </h3>\r\n          <input id=\"theme\"\r\n                type=\"range\" \r\n                value={themeValue}\r\n                onChange={this.onThemeChange}\r\n                min=\"1\"\r\n                max=\"2\"\r\n                step=\"1\"\r\n                list=\"themeList\" />\r\n          <datalist id=\"themeList\">\r\n            <option value=\"1\"/>\r\n            <option value=\"2\"/>\r\n          </datalist>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import ChangeUser from './change-user';\r\n\r\nexport default ChangeUser;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport SYMBOLS from '../../../model/symbols';\r\n\r\nimport './change-user.scss';\r\n\r\ninterface Props {\r\n  userName: string;\r\n  onUserButtonClick: Function;\r\n  userList: string[];\r\n}\r\n\r\ninterface State {\r\n  inputValue: string;\r\n  selectedValue: any;\r\n}\r\n\r\nexport default class ChangeUser extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: '',\r\n      selectedValue: '',\r\n    }\r\n  }\r\n\r\n  onButtonClick = () => {\r\n    const {inputValue, selectedValue } = this.state;\r\n    const { userName } = this.props;\r\n    const name = inputValue || selectedValue || userName;\r\n    this.props.onUserButtonClick(name);\r\n  }\r\n\r\n  onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      inputValue: event.target.value,\r\n    });\r\n  }\r\n\r\n  onSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    this.setState({\r\n      selectedValue: event.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { inputValue, } = this.state;\r\n    const { userList } = this.props;\r\n    return (\r\n      <div className=\"change-user-container\">\r\n        <div className=\"change-user-input-container\">\r\n          <input value={inputValue}\r\n                 type=\"text\"\r\n                 placeholder=\"type user name\" \r\n                 className=\"change-user-input\"\r\n                 onChange={this.onInputChange} />\r\n          <button className=\"change-user-submit\"\r\n                  onClick={this.onButtonClick}>\r\n            <FontAwesomeIcon icon={SYMBOLS.USER} size=\"lg\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"change-user-list-container\">\r\n          <select className=\"change-user-list\"\r\n                  size={10}\r\n                  onChange={this.onSelectUser} >\r\n            {userList.map((user) => {\r\n              return <option key={user} value={user}>\r\n                       {user}\r\n                     </option>\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import Modal from './modal';\r\n\r\nexport default Modal;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { Component } from 'react';\r\nimport SYMBOLS from '../../model/symbols';\r\n\r\nimport Statistics from './statistics';\r\nimport Settings from './settings';\r\nimport ChangeUser from './change-user';\r\n\r\nimport './modal.scss';\r\n\r\ninterface Props {\r\n  modalWindow: string,\r\n  onCloseButtonClick: Function,\r\n  userName: string,\r\n  gamesTotal: number,\r\n  gamesWon: number,\r\n  difficultLevel: number;\r\n  onDifficultyChange: Function;\r\n  bestOfValue: number;\r\n  onBestOfChange: Function;\r\n  audioValue: number;\r\n  onAudioChange: Function;\r\n  musicRenderValue: number;\r\n  musicValue: number;\r\n  onMusicChange: Function;\r\n  themeValue: number;\r\n  onThemeChange: Function;\r\n  userList: string[];\r\n  onUserButtonClick: Function;\r\n}\r\n\r\nexport default class Modal extends Component<Props> {\r\n\r\n  getComponent = (component: string) => {\r\n    const { userName, gamesTotal, gamesWon, onDifficultyChange, difficultLevel, bestOfValue, onBestOfChange, audioValue, onAudioChange, musicRenderValue,musicValue, onMusicChange, themeValue, onThemeChange, userList, onUserButtonClick } = this.props;\r\n    switch(component) {\r\n      case 'Statistics':\r\n        return <Statistics userName={userName}\r\n                           gamesTotal={gamesTotal}\r\n                           gamesWon={gamesWon} />;\r\n      case 'Settings':\r\n        return <Settings difficultyValue={difficultLevel} \r\n                         onDifficultyChange={onDifficultyChange}\r\n                         bestOfValue={bestOfValue}\r\n                         onBestOfChange={onBestOfChange}\r\n                         audioValue={audioValue}\r\n                         onAudioChange={onAudioChange}\r\n                         musicRenderValue={musicRenderValue}\r\n                         musicValue={musicValue}\r\n                         onMusicChange={onMusicChange}\r\n                         themeValue={themeValue}\r\n                         onThemeChange={onThemeChange} />;\r\n      case 'Change User':\r\n        return <ChangeUser userName={userName}\r\n                           userList={userList}\r\n                           onUserButtonClick={onUserButtonClick} />;\r\n      default:\r\n        return ';'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { modalWindow, onCloseButtonClick } = this.props;\r\n    const className = modalWindow ? \"modal border\" : \"modal border hidden\";\r\n    const ModalComponent = this.getComponent(modalWindow);\r\n    return (\r\n      <div className={className}>\r\n        <h2 className=\"modal-title\">{modalWindow}</h2>\r\n        {ModalComponent}\r\n        <button className=\"modal-button\"\r\n                type=\"button\"\r\n                onClick={() => onCloseButtonClick()}>\r\n                  <FontAwesomeIcon icon={SYMBOLS.OK} size=\"lg\" />\r\n                </button>\r\n      </div>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/1.9357c518.mp3\";","export default __webpack_public_path__ + \"static/media/1.1855a7c5.mp3\";","export default __webpack_public_path__ + \"static/media/2.435c1fec.mp3\";","export default __webpack_public_path__ + \"static/media/1.dc1d7968.mp3\";","export default __webpack_public_path__ + \"static/media/2.6b6ccb15.mp3\";","export default __webpack_public_path__ + \"static/media/3.bcafe12e.mp3\";","export default __webpack_public_path__ + \"static/media/4.afa8e532.mp3\";","export default __webpack_public_path__ + \"static/media/1.0d56ab12.mp3\";","export default __webpack_public_path__ + \"static/media/2.01b2d62d.mp3\";","export default __webpack_public_path__ + \"static/media/3.521a6e5b.mp3\";","export default __webpack_public_path__ + \"static/media/4.2d0c17bf.mp3\";","export default __webpack_public_path__ + \"static/media/5.8a3c342a.mp3\";","export default __webpack_public_path__ + \"static/media/music.2d28181d.mp3\";","import Popup from './popup';\r\n\r\nexport default Popup;","import React from 'react';\r\n\r\nimport './popup.scss';\r\n\r\ninterface Props {\r\n  text: string;\r\n}\r\n\r\nexport default function Popup({ text }: Props) {\r\n  const popupClass = text ? \"popup popup-anim\" : \"popup\";\r\n  return (\r\n    <div className={popupClass}>\r\n      <span className=\"popup-text\">\r\n        { text }\r\n      </span>\r\n    </div>\r\n  );\r\n}","import App from './App';\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport Battlefield from '../battlefield';\nimport Footer from '../footer';\nimport Header from '../header';\nimport ScoreLine from '../score-line';\nimport MovesCounter from '../moves-counter';\nimport Modal from '../modal';\n\n\nimport { AUTO_GAME_TIME_STEP, GAME_TIME_STEP, SOUND_DELAY, CRUSH_SOUND_DELAY, TIME_BEFORE_NEW_ROUND, DEFAULT_AUDIO_VALUE, DEFAULT_MUSIC_VALUE, DEFAULT_THEME_VALUE } from '../../model/constants';\nimport * as SOUNDS from '../../model/sounds';\nimport { another } from '../../model/Utils';\nimport Model from '../../model/Model';\nimport Field from '../../model/Field';\n\nimport './App.scss';\nimport Popup from '../modal/popup';\n\ninterface Props {\n  model: Model;\n}\n\ninterface State {\n  bestOf: number;\n  currentBestOf: number;\n  score: number[];\n  user1Name: string;\n  player1GamesTotal: number;\n  player1GamesWon: number;\n  player1Field: Array<number[]>;\n  player1Moves: number;\n  difficultyLevel: number;\n  user2Name: string;\n  player2Field: Array<number[]>;\n  player2Moves: number;\n  modalWindow: string;\n  audioValue: number;\n  musicValue: number;\n  themeValue: number;\n  disabledApp: boolean;\n  disabledField: boolean;\n  isAutoGame: boolean;\n  musicStarted: boolean;\n  isPlay: boolean;\n  popupText: string;\n}\n\nexport default class App extends Component<Props, State> {\n  crushSounds: string[];\n  hitSounds: string[];\n  missSounds: string[];\n  shotSounds: string[];\n  music: HTMLAudioElement;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      bestOf: this.props.model.bestOf,\n      currentBestOf: this.props.model.game.bestOf,\n      score: this.props.model.game.score,\n      user1Name: this.props.model.player1.name,\n      player1GamesTotal: this.props.model.player1.games,\n      player1GamesWon: this.props.model.player1.gamesWon,\n      player1Field: this.props.model.game.player1Field.field,\n      player1Moves: this.props.model.game.player1Field.shots.length,\n      difficultyLevel: this.props.model.player1.difficultyLevel,\n      user2Name: this.props.model.player2,\n      player2Field: this.props.model.game.player2Field.field,\n      player2Moves: this.props.model.game.player2Field.shots.length,\n      modalWindow: '',\n      audioValue: DEFAULT_AUDIO_VALUE,\n      musicValue: DEFAULT_MUSIC_VALUE,\n      themeValue: DEFAULT_THEME_VALUE,\n      disabledApp: false,\n      disabledField: false,\n      isAutoGame: false,\n      musicStarted: false,\n      isPlay: false,\n      popupText: '',\n    }\n    this.crushSounds = [SOUNDS.crush1];\n    this.hitSounds = [SOUNDS.hit1, SOUNDS.hit2];\n    this.missSounds = [SOUNDS.miss1, SOUNDS.miss2, SOUNDS.miss3, SOUNDS.miss4];\n    this.shotSounds = [SOUNDS.shot1, SOUNDS.shot2, SOUNDS.shot3, SOUNDS.shot4, SOUNDS.shot5];\n    this.music = new Audio(SOUNDS.music);\n    this.music.volume = this.state.musicValue;\n    this.music.loop = true;\n  }\n\n  newGame = (userName?: string) => {\n    const game = userName\n      ? this.props.model.start(userName)\n      : this.props.model.newGame();\n\n    this.setState({\n      disabledApp: false,\n      disabledField: false,\n      isAutoGame: false,\n      currentBestOf: game.bestOf,\n      score: game.score,\n      player1Field: game.player1Field.field,\n      player1Moves: this.props.model.game.player1Field.shots.length,\n      player2Field: game.player2Field.field,\n      player2Moves: this.props.model.game.player2Field.shots.length,\n    });\n  }\n\n  newRound = () => {\n    this.props.model.newRound();\n\n    this.setState({\n      disabledApp: false,\n      disabledField: false,\n      isAutoGame: false,\n      currentBestOf: this.props.model.game.bestOf,\n      score: this.props.model.game.score,\n      player1Field: this.props.model.game.player1Field.field,\n      player1Moves: this.props.model.game.player1Field.shots.length,\n      player2Field: this.props.model.game.player2Field.field,\n      player2Moves: this.props.model.game.player2Field.shots.length,\n    });\n  }\n\n  autoGame = (index: number) => {\n    const fields = [\n      this.props.model.game.player1Field,\n      this.props.model.game.player2Field,\n    ];\n    if (this.props.model.isRoundOverGetWinner(fields) !== undefined) {\n      this.setState({ disabledApp: false })\n      return;\n    };\n    \n    this.setState({ \n      disabledApp: true,\n      isAutoGame: true,\n     })\n    \n    if (index) {\n      this.compStrike('player2', fields[index], index);\n    } else {\n      this.compStrike('player1', fields[index], index);\n    }\n  }\n\n  compStrike = (player: string, field: Field, index: number) => {\n    this.playSound(this.shotSounds);\n    const compCoordinate = field.aiming();\n    const compPoint = compCoordinate.join('');\n    const newField = field.shot(compCoordinate);\n    const fieldProp = `${player}Field`;\n    const moves = field.shots.length;\n    const movesProp = `${player}Moves`;\n    this.setState<never>({ \n      [fieldProp]: newField,\n      [movesProp]: moves,\n    });\n    const enemyHit = field.isHit(compPoint);\n    if (enemyHit) {\n      setTimeout(() => {\n        setTimeout(() => this.playSound(this.hitSounds), SOUND_DELAY);\n        this.autoGame(index);\n      }, AUTO_GAME_TIME_STEP);\n    } else {\n      setTimeout(() => {\n        setTimeout(() => this.playSound(this.missSounds), SOUND_DELAY);\n        this.autoGame(another(index));\n      }, AUTO_GAME_TIME_STEP);\n    }\n  }\n\n  blowsExchange = (coordinates: number[]) => {\n    this.playSound(this.shotSounds);\n    const newField = this.props.model.game.player2Field.shot(coordinates);\n    const moves = this.props.model.game.player2Field.shots.length;\n    this.setState({\n      player2Field: newField,\n      player1Moves: moves,\n      disabledApp: true,\n    });\n    const ship = this.props.model.game.player2Field.whatIsThisShip(coordinates);\n    this.isWinGameOrRound(true);\n    if (ship) {\n      setTimeout(() => {\n        this.playSound(this.hitSounds);\n        if (ship.isWrecked) {\n          this.showPopup('Убил!');\n          setTimeout(() => this.playSound(this.crushSounds), CRUSH_SOUND_DELAY);\n        } else this.showPopup('Попал');\n      }, SOUND_DELAY);\n      this.setState({ \n        disabledApp: false,\n      });\n    } else {\n      setTimeout(() => {\n        this.playSound(this.missSounds);\n        this.showPopup('Мимо');\n      }, SOUND_DELAY);\n      this.enemyStrike();\n    }\n  }\n\n  enemyStrike() {\n    this.isWinGameOrRound(false);\n\n    setTimeout(() => {\n      this.playSound(this.shotSounds);\n      const strikeBack = this.props.model.game.player1Field.aiming();\n      const newField = this.props.model.game.player1Field.shot(strikeBack);\n      const moves = this.props.model.game.player1Field.shots.length;\n      this.setState({ \n        popupText: '',\n        player1Field: newField,\n        player2Moves: moves,\n      });\n      const ship = this.props.model.game.player1Field.whatIsThisShip(strikeBack);\n      this.props.model.saveGame();\n      if (ship) {\n        setTimeout(() => {\n          this.playSound(this.hitSounds);\n          if (ship.isWrecked) {\n            this.showPopup('Убил!');\n            setTimeout(() => this.playSound(this.crushSounds), CRUSH_SOUND_DELAY);\n          } else this.showPopup('Попал');\n        }, SOUND_DELAY);\n        this.enemyStrike();\n      } else {\n        setTimeout(() => {\n          this.playSound(this.missSounds);\n          this.showPopup('Мимо');\n        }, SOUND_DELAY);\n        this.setState({ disabledApp: false });\n      }\n    }, GAME_TIME_STEP);\n  }\n\n  isWinGameOrRound = (isWin: boolean) => {\n    const fields = [this.props.model.game.player1Field, this.props.model.game.player2Field];\n    const fieldIndex = this.props.model.isRoundOverGetWinner(fields);\n    if (fieldIndex !== undefined) {\n      this.props.model.setScore(fieldIndex);\n      console.log(isWin ? 'Ты выиграл этот раунд!' : 'Компьютер выиграл этот раунд');\n      if (this.props.model.isGameOver()) {\n        console.log(isWin ? 'Победа! Игра окончена!' : 'Игра окончена! Ты проиграл');\n        this.setState({\n          disabledField: true,\n          disabledApp: false\n        });\n        this.props.model.finishGame();\n      } else setTimeout(this.newRound, TIME_BEFORE_NEW_ROUND);\n      return;\n    }\n  }\n\n  openStatistics = () => {\n    this.setState({\n      modalWindow: 'Statistics',\n    });\n  }\n\n  openSettings = () => {\n    this.setState({\n      modalWindow: 'Settings',\n    });\n  }\n\n  onDifficultyChange = (value: number) => {\n    this.props.model.changeDifficultyLevel(value);\n    const newLevel = this.props.model.player1.difficultyLevel;\n    this.setState({\n      difficultyLevel: newLevel,\n    })\n  }\n\n  onBestOfChange = (value: number) => {\n    this.props.model.setBestOf(value);\n    const newBestOf = this.props.model.bestOf;\n    this.setState({\n      bestOf: newBestOf,\n    })\n  }\n\n  onAudioChange = (value: number) => {\n    this.setState({\n      audioValue: value,\n    })\n  }\n\n  onMusicChange = (value: number) => {\n    this.setState({\n      musicValue: value,\n    })\n    this.music.volume = value;\n  }\n\n  onThemeChange = (value: number) => {\n    this.setState({\n      themeValue: value,\n    })\n\n    document.querySelector('html')?.classList.toggle('inverted');\n  }\n\n  openChangeUser = () => {\n    this.setState({\n      modalWindow: 'Change User',\n    });\n  }\n\n  getUserList = () => {\n    return this.props.model.users.map((user) => {\n      return user.name;\n    })\n  }\n\n  newUser = (userName: string) => {\n    this.props.model.newUser(userName);\n    const {name, games, gamesWon } = this.props.model.player1;\n    this.setState({\n      user1Name: name,\n      player1GamesTotal: games,\n      player1GamesWon: gamesWon,\n    })\n\n    this.newGame(userName);\n  }\n\n  closeModal = () => {\n    this.setState({\n      modalWindow: '',\n    });\n  }\n\n  playSound = (soundArray: string[]) => {\n    const soundIndex = Math.floor(Math.random() * soundArray.length);\n    const sound = new Audio(soundArray[soundIndex]);\n    sound.volume = this.state.audioValue;\n    sound.play();\n  }\n\n  toggleMusic = () => {\n    if (this.state.musicStarted) {\n      if (this.state.isPlay) {\n        this.music.pause()\n        this.setState({\n          isPlay: false,\n        })\n      } else {\n        this.music.play()\n        this.setState({\n          isPlay: true,\n        })\n      }\n    } else {\n      this.setState({\n        isPlay: true,\n        musicStarted: true,\n      })\n      this.music.play();\n    }\n  }\n\n  showPopup = (text: string) => {\n    this.setState({\n      popupText: text,\n    })\n    setTimeout(this.hidePopup, 500);\n  }\n\n  hidePopup = () => {\n    this.setState({\n      popupText: '',\n    })\n  }\n\n  goFullScreen = () => {\n    const container = document.getElementById('wrapper');\n    container?.requestFullscreen();\n  }\n\n  restoreFullScreen = () => {\n    document.exitFullscreen().catch(err => Promise.resolve(err))\n  }\n\n  render() {\n    const { user1Name, player1GamesTotal, player1GamesWon, user2Name, disabledApp, disabledField, isAutoGame, player1Moves, player2Moves, player1Field, player2Field, bestOf, currentBestOf, score, modalWindow, difficultyLevel, audioValue, musicValue, themeValue, isPlay, popupText } = this.state;\n    const appClass = disabledApp ? \"disabled\" : \"\";\n    const fieldClass = isAutoGame || disabledField ? \"disabled\" : \"\";\n    const player1Title = isAutoGame ? \"компа 1:\" : \"твоих:\";\n    const player2Title = isAutoGame ? \"компа 2:\" : \"компа:\";\n\n    return (\n      <div className={`app ${appClass}`}>\n        <Popup text={popupText} />\n        <Modal modalWindow={modalWindow}\n               onCloseButtonClick={this.closeModal}\n               userName={user1Name}\n               gamesTotal={player1GamesTotal}\n               gamesWon={player1GamesWon}\n               difficultLevel={difficultyLevel}\n               onDifficultyChange={this.onDifficultyChange}\n               bestOfValue={bestOf}\n               onBestOfChange={this.onBestOfChange}\n               audioValue={audioValue}\n               onAudioChange={this.onAudioChange}\n               musicRenderValue={musicValue}\n               musicValue={this.music.volume}\n               onMusicChange={this.onMusicChange}\n               themeValue={themeValue}\n               onThemeChange={this.onThemeChange}\n               userList={this.getUserList()}\n               onUserButtonClick={this.newUser} />;\n        <Header isPlay={isPlay}\n                callbacks={[\n            this.newGame,\n            this.openStatistics,\n            this.openSettings,\n            () => {this.newGame(); this.autoGame(0);},\n            this.openChangeUser,\n            this.toggleMusic,\n            this.goFullScreen,\n          ]} />\n        <ScoreLine bestOf={currentBestOf}\n                   score={score}\n                   players={[user1Name, user2Name]}/>\n        <div id=\"wrapper\" className={`battlefield-container border ${fieldClass}`}>\n          <Battlefield side=\"friend\"\n                       field={player1Field} />\n          <MovesCounter player1Counter={player1Moves}\n                        player2Counter={player2Moves}\n                        player1Title={player1Title}\n                        player2Title={player2Title} />\n          <Battlefield side=\"foe\"\n                       field={player2Field}\n                       onCellClick={this.blowsExchange}\n                       isAutoGame={isAutoGame} />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport Model from './model/Model';\n\nimport App from './components/app';\n\nconst model = new Model();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App model={model} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import Field from './Field';\r\nimport { another, compare } from './Utils';\r\nimport { DEFAULT_BEST_OF, INITIAL_SCORE, DEFAULT_PLAYER2_NAME, DEFAULT_PLAYER1_NAME, DEFAULT_DIFFICULTY_LEVEL } from './constants';\r\n\r\ntype User = {\r\n  name: string;\r\n  games: number;\r\n  gamesWon: number;\r\n  difficultyLevel: number;\r\n  addGame(isWin: boolean): void\r\n}\r\n\r\ntype Game = {\r\n  bestOf: number;\r\n  score: number[];\r\n  player1Field: Field;\r\n  player2Field: Field;\r\n}\r\n\r\nexport default class Model {\r\n  users: User[];\r\n  game: Game;\r\n  bestOf: number;\r\n  player1: User;\r\n  player2: string;\r\n\r\n  constructor() {\r\n    const currentUserName = this.loadCurrentUserName();\r\n    this.users = this.getUsersStorage();\r\n    this.bestOf = DEFAULT_BEST_OF;\r\n    this.player1 = currentUserName\r\n      ? this.newUser(currentUserName)\r\n      : this.newUser();\r\n    this.game = currentUserName \r\n    ? this.start(currentUserName)\r\n    : this.start();\r\n    this.player2 = DEFAULT_PLAYER2_NAME;\r\n  }\r\n\r\n  start = (userName?: string) => {\r\n    const savedGame = userName \r\n      ? this.getGameFromStorage(userName)\r\n      : undefined;\r\n\r\n    const game = savedGame\r\n      ? this.loadGame(JSON.parse(savedGame))\r\n      : this.newGame();\r\n    return game;\r\n  }\r\n\r\n  setBestOf = (value: number) => {\r\n    this.bestOf = value;\r\n  }\r\n\r\n  setScore = (index: number) => {\r\n    this.game.score[another(index)]++;\r\n  }\r\n\r\n  finishGame =() => {\r\n    const [player1Score, player2Score] = this.game.score;\r\n    this.player1.addGame(player1Score > player2Score);\r\n    this.saveUserStatistics();\r\n  }\r\n\r\n  isGameOver = () => {\r\n    const scores = this.game.score;\r\n    return scores.some((score) => {\r\n      return score === this.game.bestOf;\r\n    });\r\n  }\r\n\r\n  isRoundOverGetWinner = (fields: Field[]) => {\r\n    const fieldIndex = fields.findIndex((field) => field.ships.every((ship) => ship.isWrecked));\r\n    if (fieldIndex === -1) return undefined;\r\n    return fieldIndex;\r\n  }\r\n\r\n  newRound = () => {\r\n    this.game = {\r\n      bestOf: this.game.bestOf,\r\n      score: this.game.score,\r\n      player1Field: new Field(),\r\n      player2Field: new Field(),\r\n    }\r\n    this.saveGame();\r\n  }\r\n\r\n  newGame = () => {\r\n    const game = {\r\n      bestOf: this.bestOf,\r\n      score: INITIAL_SCORE,\r\n      player1Field: new Field(),\r\n      player2Field: new Field(),\r\n    };\r\n    this.game = game;\r\n    this.saveGame();\r\n    return game;\r\n  }\r\n\r\n  saveGame = () => {\r\n    const stringGame = JSON.stringify(this.game);\r\n    localStorage.setItem(`levendor-react-game-${this.player1.name}`, stringGame);\r\n  }\r\n\r\n  getGameFromStorage = (userName: string) => {\r\n    return localStorage.getItem(`levendor-react-game-${userName}`);\r\n  }\r\n\r\n  loadGame = (loadedGame: Game) => {\r\n    const game = {\r\n      bestOf: loadedGame.bestOf,\r\n      score: loadedGame.score,\r\n      player1Field: new Field(loadedGame.player1Field),\r\n      player2Field: new Field(loadedGame.player2Field),\r\n    }\r\n    return game;\r\n  }\r\n\r\n  newUser = (name?: string) => {\r\n    if (this.player1 && name === this.player1.name) return this.player1;\r\n\r\n    const user = {\r\n      name: name ? name : DEFAULT_PLAYER1_NAME,\r\n      games: 0,\r\n      gamesWon: 0,\r\n      difficultyLevel: DEFAULT_DIFFICULTY_LEVEL,\r\n\r\n      addGame(isWin: boolean) {\r\n        this.games += 1;\r\n        if (isWin) this.gamesWon += 1;\r\n      }\r\n    }\r\n\r\n    const existedUser = this.getUserFromUsersStorage(user.name);\r\n  \r\n    if (existedUser) Object.assign(user, existedUser);\r\n    else this.addUserToUsersStorage(user);\r\n\r\n    this.setUser(user.name);\r\n\r\n    this.player1 = user;\r\n    return user;\r\n  }\r\n\r\n  setUser = (name: string) => {\r\n    localStorage.setItem('levendor-react-game-user', name);\r\n  }\r\n\r\n  loadCurrentUserName = () => {\r\n    return localStorage.getItem('levendor-react-game-user');\r\n  }\r\n\r\n  addUserToUsersStorage = (user: User) => {\r\n    this.users.push(user);\r\n    this.users.sort((player1: User, player2: User) => {\r\n      return compare(player1.gamesWon, player2.gamesWon, 'descending');\r\n    });\r\n\r\n    localStorage.setItem('levendor-react-game-users', JSON.stringify(this.users));\r\n  }\r\n\r\n  saveUserStatistics = () => {\r\n    const existedUserIndex = this.getUserIndexFromUsersStorage(this.player1.name);\r\n  \r\n    if (existedUserIndex > -1) {\r\n      Object.assign(this.users[existedUserIndex], this.player1);\r\n      this.users.sort((player1: User, player2: User) => {\r\n        return compare(player1.gamesWon, player2.gamesWon, 'descending');\r\n      });\r\n    }\r\n  }\r\n\r\n  getUsersStorage = (): User[] => {\r\n    const loadedUsers = localStorage.getItem('levendor-react-game-users');\r\n    const users = loadedUsers\r\n      ? JSON.parse(loadedUsers)\r\n      : [];\r\n    return users;\r\n  }\r\n\r\n  getUserIndexFromUsersStorage = (userName: string): number => {\r\n    return this.users.findIndex((user: User) => user.name === userName);\r\n  }\r\n\r\n  getUserFromUsersStorage = (userName: string): User | undefined => {\r\n    return this.users.find((user: User) => user.name === userName);\r\n  }\r\n\r\n  changeDifficultyLevel = (value: number) => {\r\n    this.player1.difficultyLevel = value;\r\n  }\r\n}"],"sourceRoot":""}